@page "/add-product"

<div class="container">
    <div class="row">
        <div class="col-md-6">
            <EditForm Model="MyProduct" Enhance OnInvalidSubmit="HandleeSaveProduct">
                <DataAnnotationsValidator/>
                <ValidationSummary/>
                <div class="card">
                    <div class="card-header">Thêm sản phẩm</div>
                    <div class="card-body">
                        <div class="form-group">
                            <label class="form-label">Tên sản phẩm: </label>
                            <InputText @bind-Value="MyProduct.Name" class="form-control"></InputText>
                        </div>
                        <div class="form-group mt-3">
                            <label class="form-label">Giá sản phẩm: </label>
                            <InputNumber @bind-Value="MyProduct.Price" class="form-control"></InputNumber>
                        </div>
                        <div class="form-group mt-3">
                            <label class="form-label">Số lượng sản phẩm: </label>
                            <InputNumber @bind-Value="MyProduct.Quantity" class="form-control"></InputNumber>
                        </div>
                        <div class="form-group mt-3">
                            <label class="form-label">Mô tả sản phẩm: </label>
                            <InputTextArea @bind-Value="MyProduct.Description" class="form-control"></InputTextArea>
                        </div>
                        <div class="form-group mt-3">
                            <label class="form-label @(ImageUploadMessage == ""?"" : "text-danger")">
                                @(ImageUploadMessage == "" ? "Hình ảnh sản phẩm: " : ImageUploadMessage)
                            </label>
                            <InputFile class="form-control" OnChange="UploadImage"></InputFile>
                        </div>
                    </div>
                    <div class="card-footer"> 
                        <div class="form-group mt-3">
                            @if (ShowSaveButton)
                            {
                                <button type="submit" class="btn btn-outline-primary"><i class="fa fa-plus"></i>Lưu</button>
                            }
                        </div>
                        <BusyButtonComponent ShowBusyButton="ShowBusyButton"></BusyButtonComponent>
                    </div>
                </div>
            </EditForm>
        </div>
    </div>
</div>

<MessageDialog @ref="messageDialog"></MessageDialog>
@code {
    Product MyProduct = new();
    string ImageUploadMessage = "";
    async Task HandleeSaveProduct()
    {
        ShowSaveButton = false;
        ShowBusyButton = !ShowSaveButton;
        if (string.IsNullOrEmpty(MyProduct.Base64Img))
        {
            messageDialog!.SetDialogValues("Hình ảnh không được để trống", "Vui lòng chọn ảnh");
            SetMessageDialog();
            return;
        }

        // var (flag, message) = await ProductSer.AddProduct(MyProduct);
        // if (flag)
        // {
        //     messageDialog!.SetDialogValues("Thành công", message);
        // }
        // else
        // {
        //     messageDialog!.SetDialogValues("Thất bại", message);
        // }
        // SetMessageDialog();
        return;
    }

    async Task UploadImage(InputFileChangeEventArgs e)
    {
        if (e.File.Name.ToLower().Contains(".png"))
        {
            var format = "image/png";
            var resizedImage = await e.File.RequestImageFileAsync(format, 300, 300);
            var buffer = new byte[resizedImage.Size];
            await resizedImage.OpenReadStream().ReadAsync(buffer);
            var imageData = $"data:{format};base64,{Convert.ToBase64String(buffer)}";
            ImageUploadMessage = "";
            MyProduct.Base64Img = imageData;
            imageData = "";
            return;
        }
        ImageUploadMessage = "Hình ảnh phải có định dạng .png";
        return;
    }
    public bool ShowBusyButton { get; set; }
    public bool ShowSaveButton { get; set; } = true;
    MessageDialog? messageDialog;

    private async void SetMessageDialog()
    {
        await messageDialog!.ShowMessage();
        ShowBusyButton = false;
        ShowSaveButton = !ShowBusyButton;
        StateHasChanged();
    }
}
